name: Tests
on:
  push:
    branches:
      - develop
      - master
  pull_request:
    branches:
      - develop
      - master
jobs:
  tests:
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'
          check-latest: true
          cache-dependency-path: 'go.sum'

      - name: Test
        run: make test-race

      - name: Reproducible build test
        if: runner.os != 'Windows'
        run: |
          go build -o ./build/test1 ./tests/main.go
          shasum -a256 ./build/test1 | awk '{ print $1 }' > test1.sha256
          go build -o ./build/test2 ./tests/main.go
          shasum -a256 ./build/test2 | awk '{ print $1 }' > test2.sha256
            if ! cmp -s test1.sha256 test2.sha256; then
              echo >&2 "Reproducible build broken"; cat test1.sha256; cat test2.sha256; exit 1
            fi

  govuln:
    name: Run govuln check and Publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Running govulncheck
        uses: Templum/govulncheck-action@v0.10.1
        continue-on-error: false
        with:
          go-version: 1.20.4
          vulncheck-version: latest
          package: ./...
          github-token: ${{ secrets.GITHUB_TOKEN }}
          skip-upload: true
          fail-on-vuln: true

      - name: Upload govulncheck report
        uses: actions/upload-artifact@v3
        with:
          name: raw-report
          path: raw-report.json

  mutating:
    name: Mutation tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'
          check-latest: true
          cache-dependency-path: 'go.sum'

      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Install dependencies
        run: make install-deps

      - name: Mutating testing
        run: make mut
