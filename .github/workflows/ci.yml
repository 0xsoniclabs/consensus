name: CI
on:
  push:
    branches:
      - develop
      - master
  pull_request:
    branches:
      - develop
      - master
jobs:
  tests:
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
        with:
          path: lachesis-base

      - name: Checkout submodules
        run: |
          cd lachesis-base
          git submodule update --init --recursive --force
          git fetch --no-tags --prune --depth=1 origin +refs/heads/develop:refs/remotes/origin/develop

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/Library/Caches/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-

      - uses: actions/setup-go@v4
        with:
          go-version: 1.20.x

      - name: Golang-ci install
        if: runner.os == 'Linux'
        run: make lintci-deps

      - name: Build
        run: make all

      - name: Test
        run: make test-race

      - name: Reproducible build test
        run: |
          go build -o ./build/test1 ./tests/main.go
          shasum -a256 ./build/test1 | awk '{ print $1 }' > test1.sha256
          go build -o ./build/test2 ./tests/main.go
          shasum -a256 ./build/test2 | awk '{ print $1 }' > test2.sha256
            if ! cmp -s test1.sha256 test2.sha256; then
              echo >&2 "Reproducible build broken"; cat test1.sha256; cat test2.sha256; exit 1
            fi

  govuln:
    name: Run govuln check and Publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Running govulncheck
        uses: Templum/govulncheck-action@v0.0.8
        continue-on-error: true
        env:
          DEBUG: "true"
        with:
          go-version: 1.20
          vulncheck-version: latest
          package: ./...
          github-token: ${{ secrets.GITHUB_TOKEN }}
          fail-on-vuln: true

      - name: Upload govulncheck report
        uses: actions/upload-artifact@v3
        with:
          name: raw-report
          path: raw-report.json

  mutating:
    name: Mutation tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v4
        with:
          go-version: 1.20.x

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install dependencies
        run: make install-deps

      - name: Mutating testing
        run: make mut
